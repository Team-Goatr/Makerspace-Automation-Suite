<?php
require_once __DIR__ . '/vendor/autoload.php';

define('STRIPE_SECRET_KEY_PATH', '/home/ubuntu/stripe_secret.txt');
define('STRIPE_PUB_KEY_PATH', '/home/ubuntu/stripe_public.txt');

/**
 * Echos a javascript button which builds the Stripe checkout
 * $email: The customer's provided email
 * $amount: the amount in cents to show on the button
 */
function getStripeCheckout($email, $amount) {
    $stripe_pub_key = trim(file_get_contents(STRIPE_PUB_KEY_PATH));
    echo <<<END

    <script
        src="https://checkout.stripe.com/checkout.js" class="stripe-button"
        data-key="$stripe_pub_key"
        data-amount="$amount"
        data-email="$email"
        data-name="Decatur Makerspace"
        data-description="Membership"
        data-label="Pay with Card (secured by Stripe)"
        data-image="https://stripe.com/img/documentation/checkout/marketplace.png"
        data-locale="auto"
        data-currency="usd"
        data-zip-code="true"
        data-allow-remember-me="false">
    </script>

END;
}

/**
 * Returns a Stripe customer object created from the token generated by checkout
 */
function createStripeCustomer($email, $token) {
    $stripe_secret_key = trim(file_get_contents(STRIPE_SECRET_KEY_PATH));
    \Stripe\Stripe::setApiKey($stripe_secret_key);

    $customer = \Stripe\Customer::create(array(
      "email" => $email,
      "source" => $token,
    ));

    return $customer;
}

/**
 * Returns a Stripe customer object that already exists in our user base
 */
function retrieveStripeCustomer($customer_id) {
    $stripe_secret_key = trim(file_get_contents(STRIPE_SECRET_KEY_PATH));
    \Stripe\Stripe::setApiKey($stripe_secret_key);

    $customer = \Stripe\Customer::retrieve($customer_id);
    return $customer;
}

/**
 * Returs a Stripe plan
 */
function retrieveStripePlan($id) {
    $stripe_secret_key = trim(file_get_contents(STRIPE_SECRET_KEY_PATH));
    \Stripe\Stripe::setApiKey($stripe_secret_key);

    $plan = \Stripe\Plan::retrieve($id);
    return $plan;
}

/**
 * Charge a stripe customer an amount (one time)
 */
function chargeStripeCustomer($id, $amount) {
    $stripe_secret_key = trim(file_get_contents(STRIPE_SECRET_KEY_PATH));
    \Stripe\Stripe::setApiKey($stripe_secret_key);

    $charge = \Stripe\Charge::create(array(
      "amount" => $amount,
      "currency" => "usd",
      "customer" => $id
    ));

    return $charge;
}

/**
 * Subscribe a stripe customer to a plan (recurring)
 */
function subscribeStripeCustomer($id, $plan) {
    $stripe_secret_key = trim(file_get_contents(STRIPE_SECRET_KEY_PATH));
    \Stripe\Stripe::setApiKey($stripe_secret_key);

    \Stripe\Subscription::create(array(
      "customer" => $id,
      "plan" => $plan,
    ));
}
